 Kernel (Ядро)

Роль:
Ядро Linux є центральною частиною операційної системи, яка виступає як посередник між апаратним забезпеченням і програмами користувача.

Що виконує які функциї + Значення:

    Управління апаратними ресурсами: Ядро здійснює контроль над процесором, оперативною пам’яттю, пристроями введення/виведення (I/O) та іншими апаратними компонентами.
    Управління процесами: Ядро відповідає за створення, планування та завершення процесів, забезпечуючи багатозадачність.
    Управління пам’яттю: Організовує розподіл і звільнення пам’яті, використовуючи віртуальну пам’ять та механізми кешування.
    Захист та безпека: Ядро забезпечує розмежування доступу між процесами і ресурсами для забезпечення безпеки системи.
    Драйвери: Підтримує роботу драйверів пристроїв, які дозволяють ОС взаємодіяти з апаратним забезпеченням.


 Libraries (Бібліотеки)

Роль:
Бібліотеки забезпечують набір функцій та модулів, які програми можуть використовувати для виконання завдань без потреби реалізовувати ці функції з нуля.

Які функції +Значення:

    Стандартні функції: Бібліотеки, такі як GNU C Library (glibc), забезпечують базові функції, наприклад, роботу з файлами, управління пам’яттю, математичні обчислення тощо.
    Полегшення розробки: Розробникам не потрібно реалізовувати загальні функції з нуля, що пришвидшує створення програм.
    Уніфікація: Бібліотеки забезпечують стандартизацію функцій, які можуть використовувати різні програми.
    Ефективність: Одна бібліотека може бути завантажена в пам’ять і використана декількома програмами одночасно, що економить ресурси системи.
    Модульність: За допомогою динамічних бібліотек (shared libraries) програми можуть оновлюватися без потреби перекомпілювати весь код.

 System utilities (Системні утиліти)

Роль:
Системні утиліти — це програми, які надають користувачеві та адміністратору можливість взаємодіяти з операційною системою для виконання повсякденних і адміністративних завдань.

Значення:

    Користувацькі інструменти: Утиліти, такі як ls, cd, cat, забезпечують базові операції з файлами та каталогами.
    Адміністративні завдання: Утиліти, такі як top, ps, df, надають інформацію про процеси, використання пам’яті, дисків тощо.    Конфігурація системи: Утиліти, наприклад ifconfig або systemctl, дозволяють налаштовувати мережу, служби, драйвери й інші аспекти системи.
    Діагностика: Інструменти, як-от dmesg або journalctl, допомагають аналізувати журнали системи та виявляти несправності.
    Автоматизація: Утиліти, такі як cron або bash, забезпечують автоматичне виконання завдань за розкладом.

Висновок:

    Ядро є серцем системи, що забезпечує взаємодію між апаратним забезпеченням і програмами.
    Бібліотеки забезпечують набір готових функцій для програм, знижуючи складність розробки та оптимізуючи використання ресурсів.
    Системні утиліти надають інструменти для ефективного управління системою,виконання завдань і діагностиая












