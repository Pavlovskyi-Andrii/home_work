# flask-deployment-with-pv.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  labels:
    app: flask-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: flask-mysql-app:2.0
        imagePullPolicy: IfNotPresent  # ← ДОБАВЬТЕ ЭТУ СТРОКУ
        ports:
        - containerPort: 5000
        env:
        - name: DB_HOST
          value: "mysql-service"
        - name: DB_USER
          value: "appuser"
        - name: DB_PASSWORD
          value: "apppassword"
        - name: DB_NAME
          value: "myapp"
        - name: FLASK_ENV
          value: "production"
        volumeMounts:
        - name: app-storage
          mountPath: /app/logs  # Путь для логов
        - name: app-storage
          mountPath: /app/uploads  # Путь для загружаемых файлов
          subPath: uploads
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        # Resource limits
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
      volumes:
      - name: app-storage
        persistentVolumeClaim:
          claimName: app-pvc
      

---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  labels:
    app: flask-app
spec:
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  selector:
    app: flask-app
  type: LoadBalancer  # Для Minikube будет работать с minikube tunnel